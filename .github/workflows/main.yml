name: Create Release

on:
  push:
    branches: 
      - master
      - test
      - main
env:  
  OCTOPUS_PROJECT_NAME: 'GHA #1'
  OCTOPUS_SPACE_NAME: Adam
  OCTOPUS_SPACE: 'Adam'
  PACKAGE_VERSION: 1.0.1

jobs:
 build:
   name: Push Package and Create Release
   runs-on: ubuntu-latest

   steps:
   - run: git clone "https://github.com/AdamHollow49/octopGHA"
   - name: Push a package to Octopus Deploy üêô
     uses: OctopusDeploy/push-package-action@v3
     env:
        OCTOPUS_API_KEY: ${{ secrets.API_KEY }}
        OCTOPUS_URL: ${{ secrets.OCTOPUS_URL }}
     with:
      overwrite_mode: OverwriteExisting
      packages: |
        ${{ github.workspace }}/octopGHA/yamlTest.${{ env.PACKAGE_VERSION}}.zip
 
   - name: Create Release in Octopus Deploy
     id: releaseCreate
     uses: OctopusDeploy/create-release-action@v3.0.5
     with:
       api_key: ${{ secrets.API_KEY }}
       project: ${{ env.OCTOPUS_PROJECT_NAME }}
       server: ${{ secrets.OCTOPUS_URL }}
       space: ${{ env.OCTOPUS_SPACE_NAME }}
       package_version: ${{ env.PACKAGE_VERSION}}
  
   - run: echo ${{ releaseCreate.outputs.release_number }}
   
   - name: Deploy a Release in Octopus Deploy
     uses: OctopusDeploy/deploy-release-action@v3.0.4
     with:
       project: ${{ env.OCTOPUS_PROJECT_NAME }}
       release_number: ${{ releaseCreate.outputs.release_number }}
       environments: Production
       server: ${{ secrets.OCTOPUS_URL }}
       api_key: ${{ secrets.API_KEY }}
       space: ${{ env.OCTOPUS_SPACE_NAME }}
